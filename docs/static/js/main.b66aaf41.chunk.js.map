{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","valor","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,YAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SANW,SAAEC,GACnBA,EAAEC,iBACFN,GAAY,SAAAO,GAAK,OAAML,GAAN,mBAAqBK,QAItC,SACI,uBACIC,KAAK,OACLC,MAAQP,EACRQ,SAdS,SAAEL,GACnBF,EAAeE,EAAEM,OAAOF,aAmBhCV,EAAYa,UAAY,CACpBZ,YAAca,IAAUC,KAAKC,Y,YC1BpBC,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAClC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAKJ,IACtB,kCAAMA,EAAN,W,uBCJCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAUtB,ECbwB,SAAEA,GAE1B,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAM,SAAAC,GACHH,EAAS,CACTV,KAAMa,EACNL,SAAS,SAGlB,CAAEd,IAEEe,EDJ0BK,CAAcpB,GAAlCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAErB,OAAQ,qCACJ,qBAAIlB,UAAU,oCAAd,cAAoDI,EAApD,OAECc,GAAW,mBAAGlB,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGIe,EAAOH,KAAK,SAAEa,GACV,OACI,cAAC,EAAD,eAEKA,GADAA,EAAMX,aEzBlBY,EAAe,WAE5B,MAAgC5C,mBAAS,CAAC,cAA1C,mBAAOsB,EAAP,KAAiBvB,EAAjB,KAOI,OACI,qCACI,qCACA,cAAC,EAAD,CAAaA,YAAcA,IAC3B,uBAIA,6BAEQuB,EAASQ,KAAK,SAAAR,GACV,OAAO,cAAC,EAAD,CAEKA,SAAWA,GADNA,Y,MCnBzCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b66aaf41.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategory }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); \r\n\r\n    const handleChange = ( e ) => {\r\n        setInputValue( e.target.value)\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        setCategory(valor => [ inputValue, ...valor])\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategory : PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={title} />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=E9plooOfEyMhMZ7hiUvtsEOE0rZwwNEk`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    \r\n    // useEffect(() => {\r\n        //     getGifs(category)\r\n        //     .then( setImages );\r\n        // }, [ category ])\r\n        \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (<>\r\n        <h3 className=\"animate__animated animate__bounce\"> {category} </h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n            images.map( ( image ) => {\r\n                return (\r\n                    <GifGridItem \r\n                    key={image.id}\r\n                    { ...image }\r\n                    />\r\n                )\r\n            })\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                data: imgs,\r\n                loading: false\r\n                })\r\n            });\r\n    }, [ category ])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [category, setCategory] = useState(['One Piece']);\r\n\r\n// const handleAdd = () => {\r\n//     setCategory( [...category,document.getElementById('campo').value])\r\n// }\r\n\r\n\r\n    return( \r\n        <>\r\n            <h2>Gif</h2>\r\n            <AddCategory setCategory={ setCategory }/>\r\n            <hr />\r\n\r\n            {/* <input type='text' id='campo' />\r\n            <button onClick={ handleAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    category.map( category => {\r\n                        return <GifGrid \r\n                                    key={category}\r\n                                    category={ category }\r\n                                />\r\n                    })\r\n                }\r\n            </ol>\r\n    </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}